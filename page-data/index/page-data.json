{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"markdownRemark":{"frontmatter":{"layout":"page.js","slug":"__home","title":"Home"},"html":"<p><strong>Kaluma</strong> is a tiny and efficient JavaScript runtime for RP2040 and RP2350 (Raspberry Pi Pico, Pico-w, Pico2, Pico2-W). The main features are:</p>\n<ul>\n<li><u>Small footprint</u>. Runs minimally on microcontrollers with 300KB ROM with 64KB RAM.</li>\n<li>Support <u>modern JavaScript</u> standards (ECMAScript 5/6/6+). Powered by <a href=\"https://jerryscript.net/\">JerryScript</a>.</li>\n<li>Has internal event loop like as Node.js for <u>asynchronous</u>.</li>\n<li>Has <u>built-in modules</u> including file systems (LittleFS, FAT), graphics, networking and more.</li>\n<li>Support RP2's <u>PIO (Programmable I/O) inline assembly</u> in JavaScript code.</li>\n<li>Provides very friendly API that resembles <u>Node.js</u> and <u>Arduino</u>.</li>\n</ul>\n<h3 id=\"installation\" style=\"position:relative;\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h3>\n<p><img src=\"/images/pico-bootsel.png\" alt=\"Pico\"></p>\n<ul>\n<li>Get a <a href=\"https://www.raspberrypi.org/products/raspberry-pi-pico/\">Raspberry Pi Pico</a> board or other RP2040 board.</li>\n<li>Get a <a href=\"https://www.raspberrypi.com/products/raspberry-pi-pico-2/\">Raspberry Pi Pico2</a> board or other RP2350 board.</li>\n<li><a href=\"/download\">Download</a> firmware <strong>.UF2</strong> file.</li>\n<li>Push and hold the <strong>BOOTSEL</strong> button and plug into USB port of your computer, and then release the button. It will mount as USB storage device named <strong>RPI-RP2</strong>.</li>\n<li>Drag and drop the downloaded <strong>.UF2</strong> onto the <strong>RPI-RP2</strong> volume. Your Pico will reboot automatically.</li>\n</ul>\n<h3 id=\"quick-start\" style=\"position:relative;\"><a href=\"#quick-start\" aria-label=\"quick start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quick Start</h3>\n<p>Write the first blink code with any text editor.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">const</span> led <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">pinMode</span><span class=\"token punctuation\">(</span>led<span class=\"token punctuation\">,</span> <span class=\"token constant\">OUTPUT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">digitalToggle</span><span class=\"token punctuation\">(</span>led<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To upload code to your board, we need <a href=\"https://github.com/kaluma-project/kaluma-cli\">Kaluma CLI</a>. Of course, it is assumed that <a href=\"https://nodejs.org\">Node.js</a> is installed.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g @kaluma/cli</code></pre></div>\n<p>Use <code class=\"language-text\">flash</code> command of CLI to upload <code class=\"language-text\">index.js</code> to your board. CLI automatically finds a serial port which Raspberry Pi Pico is connected. If you want to specify a serial port to upload code, use <code class=\"language-text\">--port</code> option.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kaluma flash index.js</code></pre></div>\n<p>After uploading successfully, you will see a blinking LED on the board.</p>"},"site":{"siteMetadata":{"navs":[{"name":"Download","url":"/download","blank":false},{"name":"Showcase","url":"/showcase","blank":false},{"name":"Packages","url":"/packages","blank":false},{"name":"Docs","url":"/docs","blank":false},{"name":"Discussions","url":"https://github.com/kaluma-project/kaluma/discussions","blank":true},{"name":"IDE","url":"/ide","blank":false}],"title":"Kaluma","siteUrl":"https://kalumajs.org","description":null}}},"pageContext":{}},
    "staticQueryHashes": []}