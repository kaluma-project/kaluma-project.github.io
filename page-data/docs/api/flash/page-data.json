{
    "componentChunkName": "component---src-templates-doc-js",
    "path": "/docs/api/flash",
    "result": {"data":{"markdownRemark":{"frontmatter":{"layout":"doc.js","slug":"docs/api/flash","title":"Flash"},"html":"<h1 id=\"flash\" style=\"position:relative;\"><a href=\"#flash\" aria-label=\"flash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flash</h1>\n<p>The <code class=\"language-text\">flash</code> module provides block device for flash memory. Use <code class=\"language-text\">require('flash')</code> to access this module.</p>\n<blockquote>\n<p>Do not use this class without knowing about flash allocation map. Writing and erasing blocks in flash memory may broke your code, files, storage items in flash.</p>\n</blockquote>\n<h2 id=\"class-flash\" style=\"position:relative;\"><a href=\"#class-flash\" aria-label=\"class flash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Class: Flash</h2>\n<p>An instance of <code class=\"language-text\">Flash</code> represents a block device.</p>\n<h3 id=\"new-flashbase-count\" style=\"position:relative;\"><a href=\"#new-flashbase-count\" aria-label=\"new flashbase count permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>new Flash(base, count)</h3>\n<ul>\n<li><strong><code class=\"language-text\">base</code></strong> <code class=\"language-text\">&lt;number></code> Starting block number.</li>\n<li><strong><code class=\"language-text\">count</code></strong> <code class=\"language-text\">&lt;number></code> Number of blocks.</li>\n</ul>\n<p>Returns a block device instance.</p>\n<h3 id=\"flashreadblock-buffer-offset\" style=\"position:relative;\"><a href=\"#flashreadblock-buffer-offset\" aria-label=\"flashreadblock buffer offset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flash.read(block, buffer[, offset])</h3>\n<ul>\n<li><strong><code class=\"language-text\">block</code></strong> <code class=\"language-text\">&lt;number></code> Block number to read.</li>\n<li><strong><code class=\"language-text\">buffer</code></strong> <code class=\"language-text\">&lt;Uint8Array></code> Buffer where the read data to be stored.</li>\n<li><strong><code class=\"language-text\">offset</code></strong> <code class=\"language-text\">&lt;number></code> Offset of <code class=\"language-text\">buffer</code>.</li>\n</ul>\n<p>Read the block data and store in <code class=\"language-text\">buffer</code>.</p>\n<h3 id=\"flashwriteblock-buffer-offset\" style=\"position:relative;\"><a href=\"#flashwriteblock-buffer-offset\" aria-label=\"flashwriteblock buffer offset permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flash.write(block, buffer[, offset])</h3>\n<ul>\n<li><strong><code class=\"language-text\">block</code></strong> <code class=\"language-text\">&lt;number></code> Block number to write.</li>\n<li><strong><code class=\"language-text\">buffer</code></strong> <code class=\"language-text\">&lt;Uint8Array></code> Data to write.</li>\n<li><strong><code class=\"language-text\">offset</code></strong> <code class=\"language-text\">&lt;number></code> Offset of <code class=\"language-text\">buffer</code>.</li>\n</ul>\n<p>Write the <code class=\"language-text\">buffer</code> data at the block.</p>\n<h3 id=\"flashioctlop-arg\" style=\"position:relative;\"><a href=\"#flashioctlop-arg\" aria-label=\"flashioctlop arg permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>flash.ioctl(op[, arg])</h3>\n<ul>\n<li><strong><code class=\"language-text\">op</code></strong> <code class=\"language-text\">&lt;number></code> I/O operation.</li>\n<li><strong><code class=\"language-text\">arg</code></strong> <code class=\"language-text\">&lt;number></code> Argument of the <code class=\"language-text\">op</code>.</li>\n</ul>\n<p>Perform an I/O operation.</p>\n<p>I/O operations are below:</p>\n<ul>\n<li><code class=\"language-text\">1</code> : Initialize the device (not supported)</li>\n<li><code class=\"language-text\">2</code> : Shutdown the device (not supported)</li>\n<li><code class=\"language-text\">3</code> : Synchronize the device (not supported)</li>\n<li><code class=\"language-text\">4</code> : Returns the total number of blocks</li>\n<li><code class=\"language-text\">5</code> : Returns the number of bytes in a block</li>\n<li><code class=\"language-text\">6</code> : Erase a block (<code class=\"language-text\">arg</code> is the block number to erase)</li>\n<li><code class=\"language-text\">7</code> : Returns the flash page size</li>\n</ul>"},"allMarkdownRemark":{"nodes":[{"frontmatter":{"category":"","order":0,"slug":"__packages","title":"Packages"}},{"frontmatter":{"category":"root","order":2,"slug":"docs/repl","title":"REPL"}},{"frontmatter":{"category":"root","order":3,"slug":"docs/tutorials","title":"Tutorials"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/adc","title":"ADC"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/analog-io","title":"Analog I/O"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/at-command","title":"AT Command"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/board","title":"Board"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/button","title":"Button"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/console","title":"Console"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/digital-io","title":"Digital I/O"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/errors","title":"Errors"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/events","title":"Events"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/file-system","title":"File system"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/flash","title":"Flash"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/global","title":"Global"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/gpio","title":"GPIO"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/graphics","title":"Graphics"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/http","title":"HTTP"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/i2c","title":"I2C"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/interrupts","title":"Interrupts"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/led","title":"LED"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/net","title":"Net"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/path","title":"Path"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/process","title":"Process"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/pwm","title":"PWM"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/rp2","title":"RP2"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/rtc","title":"RTC"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/sdcard","title":"SDCard"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/storage","title":"Storage"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/stream","title":"Stream"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/timers","title":"Timers"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/uart","title":"UART"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/url","title":"URL"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/wdt","title":"WDT"}},{"frontmatter":{"category":"root","order":0,"slug":"docs","title":"Introduction"}},{"frontmatter":{"category":"board","order":0,"slug":"docs/boards/pico","title":"Pico"}},{"frontmatter":{"category":"board","order":0,"slug":"docs/boards/pico-w","title":"Pico W"}},{"frontmatter":{"category":"board","order":0,"slug":"docs/boards/pico2","title":"Pico2"}},{"frontmatter":{"category":"board","order":0,"slug":"docs/boards/pico2-w","title":"Pico2 W"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/spi","title":"SPI"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/cyw43","title":"CYW43"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/wifi","title":"Wi-Fi"}},{"frontmatter":{"category":"api","order":null,"slug":"docs/api/device-driver","title":"Device Driver"}},{"frontmatter":{"category":"root","order":1,"slug":"docs/getting-started","title":"Getting Started"}},{"frontmatter":{"category":"","order":0,"slug":"__home","title":"Home"}}]}},"pageContext":{"slug":"docs/api/flash"}},
    "staticQueryHashes": []}